{
  
    
        "post0": {
            "title": "A starter pack on dynamic blogging with fastpages and heroku app deployment",
            "content": ". After being introduced to blogging by Dr. Rahul Dave while doing a course with univ.ai, I have come to see that it is a great pathway to communicate with the world. Keeping this in mind I wondered if there was a way I could help in getting people started with their own blog. So here goes my attempt at precisely that. . While going through resources to get my dynamic jupyter notebooks up and running on fastpages, I noticed that there wasn&#39;t any compiled starter pack on blogging with fastpages using plotly and altair charts. I also found that deploying apps on Heroku using Streamlit provided a nice visual and engaging interface to go with my blog. So I thought why not have a nice and easy tutorial combining both. Hope you enjoy it! . In case you&#39;re not quite convinced as to why you would have to blog, here&#39;s a post by Rachel Thomas co-founder of fast.ai, that might change your mind. . So lets get started . Fastpages, unlike github pages, allows you to dynamically run code written on Jupyter Notebooks. We can set a period of time after which the blog automatically runs and updates itself. So if you were to blog about Covid-19 for example, this is a nifty tool that keeps your page upto date with the current data. . Setup . In order to set up fastpages on your github follow the steps shown in this video, or follow the instructions given here. You can change the content of homepage and description in config.yml and index.html within your fastpages repository. If you&#39;d like to edit the about part of your page, move into _pages folder and edit about.md. You could create both markdown blogs or jupyter notebook blogs and upload it into _posts or _notebooks respectively. Make sure you rename the files to the right format given in the README within each of these folders. . Once you are done with this, move to the _action_files in your fastpages repository and add run_notebooks.sh given here. In this file you will see the following: . Here, if you do not want to periodically run a notebook, you can skip the file as I have with &#39;2020-08-09-neural-log-reg.ipynb&#39;. Remember to re-run your notebook before uploading in this case or the outputs will not be visible as the notebook will not be run after upload onto github. . Note: If your notebook is larger than 25MB, clear all outputs, upload it and have it run dynamically once after upload, after which you can add this file to be skipped for the next run. . Now, we need to add a workflow that runs an update. We can do this by adding update-nb.yaml found here into .github/workflows folder within your fastpages repository. In this file you will see the following: . -cron: &quot;* * * * *&quot; gives the period of time after which the notebooks will be run and your page will get updated. You can play around with this to find something suitable for you. I would suggest a minimum period of 10 mins. . Note: If you get an error saying &quot;./_action_files/run_notebooks.sh: /bin/sh^M: bad interpreter: No such file or directory&quot; Open the run_notebooks.sh with vi or vim and enter in vi command mode (key Esc), then type this :set fileformat=unix and save it with :wq! Upload the file back onto the repository and you&#39;re good to go. Errors can be checked by going to action files within your repository and opening &#39;Update Notebooks and Refresh Page&#39; . Creating notebooks that run plotly/altair/matplotlib on fastpages . Plotly and altair charts provide interactive charts that decorates your graphs and adds more appeal to it. I would suggest giving it a try in case you haven&#39;t already. Here is a blog created using plotly and altair charts. You can find the jupyter notebook by viewing on github or clicking this link. . Once you have completed your notebook that has plotly/altair and matplotlib charts, add a cell at the top that enables jupyter widgets and installs the required packages. Copy paste the below code to do the same. . %%capture &#39;&#39;&#39;install the necessary packages&#39;&#39;&#39; !pip install notebook ipywidgets !pip install altair-viewer &#39;&#39;&#39;Jupyter widgets extension&#39;&#39;&#39; !jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build &#39;&#39;&#39;jupyterlab renderer support&#39;&#39;&#39; !jupyter labextension install jupyterlab-plotly@4.9.0 --no-build &#39;&#39;&#39;FigureWidget support&#39;&#39;&#39; !jupyter labextension install plotlywidget --no-build &#39;&#39;&#39;Build extensions (must be done to activate extensions since --no-build is used above)&#39;&#39;&#39; !jupyter lab build . You will need to import HTML using: . from IPython.display import HTML . In order to display your plotly chart, run . display(HTML(fig.to_html(include_plotlyjs=&#39;cdn&#39;))); . . . Matplotlib figures and other charts can be converted to plotly charts by using: . fig = go.Figure(fig); #fig : figure to be converted . Fastpages allows altair charts to render directly. Link for the implementation. . Create a requirements.txt file. To do this, create a , .py file with all the imports you have used in the notebook and then run pipreqs on your command line (anaconda prompt/ubuntu) within the folder you have created the .py file in. This will create a requirements.txt file. You now have a notebook and a requirements file that needs to be uploaded into your repository into _notebooks. Note: Add new library requirements onto the same file when you create new notebooks keeping in mind that you do not have two of the same libraries in the file. This will likely cause a dependency conflict error. . Hurrah!! You now have a blog post! . Working with Streamlit and Heroku . Streamlit is great tool that provides a framework with simple code lines to create a dashboard or app. It runs dynamically again and can be hosted on Heroku, allowing anyone to access the app. Follow the tutorial on this website to create an app on streamlit. In order to deploy the app, you would need to create an account on Heroku. If you have a student account on github, it gives one free hobby dyno for up to two years. Otherwise a normal free unverified account will serve our purpose. Follow the tutorial here to deploy the app on Heroku. Note: Before running git push heroku master you will need to run the following: git init git add . git commit -m &quot;message&quot; . Deploying the app on a custom domain name will require you to verify your account (giving credit card details) on Heroku. It will remain to be a free account, unless you purchase dyno hours. . .",
            "url": "https://niegil-francis.github.io/Personal_Blog/2020/11/14/A-starter-pack-on-dynamic-blogging.html",
            "relUrl": "/2020/11/14/A-starter-pack-on-dynamic-blogging.html",
            "date": " • Nov 14, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "A Country's Secret to Happiness",
            "content": "Introduction . As part of the Final Project for A1C1 Univ.ai&#39;s Course, the team - Vishnu, Sakthisree, Niegil and Rishabh - started their journey to leverage Machine Learning for trying to answer the age-old question of - what exactly makes us happy? . The World Happiness Report was recommended to be a good starting point for guaging world wise bliss. Throughout our analysis, the data points surely helped us although towards the end we were able to understand that perhaps all of the variables in this report alone will not be sufficient for us to accurately measure the happiness of a country since &quot;happiness&quot; is very relative in nature. . . There are six measurements taken per country for guaging the World Happiness Index. They consist of: . GDP per Capita - Gross Domestic Product per capita for the countries . | Family - Satisfaction Rank of Family . | Life Expectancy - Avg. expected years to live . | Freedom - Perception of freedom quantified . | Generosity - Numerical value estimated based on the perception of Generosity experienced by poll takers in their country. . | Trust/Government Corruption - A quantification of the people&#39;s perceived trust in their governments. . | Dystopia Score - Score based on comparison to hypothetically the saddest country in the world. . | Dystopia Residual - Rank of any country in a particular year. . | The Happiness Score calculated in the report is actually an average of the responses to the main life evaluation question asked in the Gallup World Poll (GWP), which uses the Cantril Ladder. . Cantril Ladder involved something called as Cantril step where they ask reponsents to think of a step with the most excellent life they can think of and with that as benchmark, score their current life. . Credits Remarks to: . Univ.Ai Professor Pavlos Protopapas | Kaggle Datasets | Aashita Kesarwani - https://www.kaggle.com/aashita/guide-to-animated-bubble-charts-using-plotly - for demonstrating beautiful ways to plot bubble charts | Jesper Sören Dramsch - https://www.kaggle.com/jesperdramsch/the-reason-we-re-happy - for demonstrating wonderful means of doing data analysis | Jamaç Eren Ay - https://www.kaggle.com/yamaerenay/world-happiness-report-preprocessed - for preparing pre processed datasets and allowing it for free use for all | Problem Statement . Given the data available per country to guage the Hapiness Index, our aim is to: . Part A - Analyze and understand which factors affect the Happiness Index Score of countries | Part B - Analyze and understand the relationship between Terror Attacks and Happiness Index | Part C - Create a Model to predict the Happiness Index of a Country | Part D - To see how much Health contributes to the Happiness Index? With the current pandemic at hand, predicting COVID-19 Cases in the coming days for countries. | Part E - Creating a Dashbord for viewing COVID-19 Predictions | Part A . To Analyze and understand which factors affect the Happiness Index Score of countries . Explaratory Data Analysis . Our objective here is to look through the datasets and perform some basic analysis to understand and guage insights. . A look into Correlation . The Spearman&#39;s Rank Correlation Coefficient is used to discover the strength of a link between two sets of data. . The Spearman rank correlation coefficient, ρ considers the ranks of the values for the two variables.ρ will always be a value between -1 and 1. . | The further away ρ is from zero, the stronger the relationship between the two variables. The sign of ρ corresponds to the direction of the relationship. If it is positive, then as one variable increases, the other tends to increase. If it is negative, then as one variable increases, the other tends to decrease. . | You use Spearman’s correlation if your data have a non-linear relationship (like an exponential relationship) or you have one or more outliers. However, Spearman’s correlation is only appropriate if the relationship between your variables is monotonic. . | . happiness_score gdp_per_capita family health freedom generosity government_trust dystopia_residual year social_support . happiness_score 1.00 | 0.80 | 0.14 | 0.77 | 0.54 | 0.13 | 0.32 | 0.23 | 0.03 | 0.24 | . gdp_per_capita 0.80 | 1.00 | 0.21 | 0.78 | 0.36 | -0.01 | 0.26 | 0.06 | -0.04 | 0.14 | . family 0.14 | 0.21 | 1.00 | -0.07 | 0.01 | 0.23 | 0.10 | 0.56 | -0.59 | -0.86 | . health 0.77 | 0.78 | -0.07 | 1.00 | 0.40 | -0.02 | 0.18 | -0.05 | 0.07 | 0.38 | . freedom 0.54 | 0.36 | 0.01 | 0.40 | 1.00 | 0.33 | 0.43 | -0.00 | 0.06 | 0.23 | . generosity 0.13 | -0.01 | 0.23 | -0.02 | 0.33 | 1.00 | 0.24 | 0.16 | -0.10 | -0.18 | . government_trust 0.32 | 0.26 | 0.10 | 0.18 | 0.43 | 0.24 | 1.00 | 0.13 | 0.02 | -0.02 | . dystopia_residual 0.23 | 0.06 | 0.56 | -0.05 | -0.00 | 0.16 | 0.13 | 1.00 | 0.09 | -0.59 | . year 0.03 | -0.04 | -0.59 | 0.07 | 0.06 | -0.10 | 0.02 | 0.09 | 1.00 | 0.43 | . social_support 0.24 | 0.14 | -0.86 | 0.38 | 0.23 | -0.18 | -0.02 | -0.59 | 0.43 | 1.00 | . Inference: From the above matrixes, it seems like Health, GDP Per Capita and freedom are the top 3 factors that correlate with happiness index. . Univariate Analysis . This type of analysis consists of use of single variable. The analysis of univariate data does not deal with causes or relationships and the main purpose of the analysis is to describe the data and find patterns that exist within it. . Bivariate Analysis . This type of analysis involves two different variables. The analysis of this type of data deals with causes and relationships and the analysis is done to find out the relationship among the two variables . Inference: . From the above plot, we can infer that there seems to be a: Linear Relationship: happiness_score v/s gdp_per_capita, happiness_score v/s health, happiness_score v/s freedom Non-Linear Relationship: happiness_score v/s gerosity, happiness_score v/s government_trust . Performing ANOVA test between predictors and response variable to guage how significantly it affects the scoring . Analysis of Variance is a statistical method, used to check the means of two or more groups that are significantly different from each other. It assumes Hypothesis as: H0: Means of all groups are equal. H1: At least one mean of the groups are different. . If the distributions overlap or close, then the grand mean will be similar to individual means whereas if distributions are far, the grand mean and individual means differ by larger distance. | In ANOVA, we will be checking &amp; comparing both Between-group variability to Within-group variability through f-test. | If there is no significant difference between the groups that all variances are equal, the result of ANOVA’s F-ratio will be close to 1. | . The best predictors of Happiness Index are: [&#39;gdp_per_capita&#39;, &#39;government_trust&#39;, &#39;health&#39;, &#39;family&#39;] . Two of the aspects coming out of ANOVA test belong to our correlation inference i.e GDP per capita and health. Apart from that, it seems like government trust and family also play quite a significant role in realizing the happiness score. . Looking at all countries and their ranks in Happiness Index Score . . . Inference: Clearly Norwary seems to the top country scoring in Happiness Index. It is not surprising since European Countries have better living conditions. . . . Happiness with regards to Generosity and Economy . . . Inference: The farther right side bubbless are mostly contries in the European Continents. Clearly they have better GDP Per capita. Surprisingly Europeans countries score average on Generosity(Asian countries have highest generosity) but have the most Happiness Score rankings. . Happiness with regards to Health and Economy . . . Inference: The farther right side bubbles are mostly contries in the European Continents. Clearly they have better Health score as well since they are present on top. The lowest health scores mostly consists of African and Asian countries. . Happiness with regards to Family and Economy . . . Inference: . The farther right side bubbless are mostly contries in the European Continents. Clearly they have better Family ratings. The most unsatisfied family rankings is actually mixture of mostly African, South American,Asian and a few European countries &amp; North American countries. . Happiness with regards to Govt Trust and Economy . . . Inference: . Most countries rank low on government trust giving us insights into how most of the world population doesn&#39;t necessarily trust it&#39;s governments despite the ovearching push of democracy to be adoptee. High government trust countries are Rwanda and obvious countries of Sinagpore, New Zealand, Finland. . World-wide View of Countries with regards to Generosity . . . . . . . . . . . Trend of Happiness Over Time . . . . . From the chart we can notice that the continent of Europe has a good score of GDP per capita, compared to others. Australian countries contribute the least to global GDP. . Part B . Analyze and understand the relationship between Terror Attacks and Happiness Index . Thoughts/ Motive . One of the things that intrigued us terrorism across the world. With wars and conflicts happening on a day to day basis, we really wanted to understand to what extent terrorism plays a role in happiness index. For this we combined two datasets - the Happiness Datasets and the World Terrorism dataset from Global Terrorism Database(GTD). . In our datasets, we have only took the count of terror attacks and not other information such as text based data surrounding the context of what happpened, names of the weapons used and so on since that would delve into NLP. Our future work in scope is using NLP to also analyse the datasets in order to better guage the relationship between happiness and terrorism. . Processing the Datasets . Now that we have seen EDA on Happiness Index, we were wondering what about terror attacks? Clearly the factors mentioned above are not sufficient enough to explain true happiness. So we decided to see how terror attacks combine with happiness index and to answer the question if there is a correlation present. . Below Cells take time to execute due to large dataset . Terrorism Database . iyear country_txt latitude longitude summary attacktype1_txt attacktype1 targtype1_txt targsubtype1 targsubtype1_txt corp1 target1 natlty1 natlty1_txt gname motive guncertain1 guncertain2 guncertain3 individual weaptype1_txt nkill . 0 2015.00 | Iraq | 33.30 | 44.37 | 01/03/2015: An explosive device planted on a m... | Bombing/Explosion | 1 | Private Citizens &amp; Property | 73.00 | Vehicles/Transportation | Not Applicable | Minibus | 95.00 | Iraq | Unknown | None | 0.00 | nan | nan | 0.00 | Explosives | 2.00 | . 1 2015.00 | Bosnia-Herzegovina | 45.18 | 15.83 | 01/01/2015: Assailants stabbed Selvedin Begano... | Armed Assault | 6 | Religious Figures/Institutions | 85.00 | Religious Figure | Unknown | Imam: Selvedin Beganovic | 28.00 | Bosnia-Herzegovina | Muslim extremists | The specific motive is unknown; however, sourc... | 0.00 | nan | nan | 0.00 | Melee | 0.00 | . 2 2015.00 | Iraq | 33.30 | 44.37 | 01/01/2015: An explosive device planted in a v... | Bombing/Explosion | 1 | Educational Institution | 48.00 | Teacher/Professor/Instructor | University of Baghdad | Lecturer | 95.00 | Iraq | Unknown | None | 0.00 | nan | nan | 0.00 | Explosives | 1.00 | . 3 2015.00 | Sweden | 59.86 | 17.64 | 01/01/2015: An assailant threw an explosive de... | Facility/Infrastructure Attack | 3 | Religious Figures/Institutions | 86.00 | Place of Worship | Unknown | Mosque | 198.00 | Sweden | Unknown | The specific motive is unknown; however, sourc... | 0.00 | nan | nan | 0.00 | Incendiary | 0.00 | . 4 2015.00 | Libya | 32.07 | 20.15 | 01/01/2015: Assailants attacked a Haftar milit... | Bombing/Explosion | 7 | Terrorists/Non-State Militia | 94.00 | Non-State Militia | Haftar Militia | 204 Camp | 113.00 | Libya | Shura Council of Benghazi Revolutionaries | None | 0.00 | nan | nan | 0.00 | Explosives | nan | . Happiness Index Database . country happiness_score gdp_per_capita family health freedom generosity government_trust dystopia_residual continent Year social_support . 0 Afghanistan | 3.79 | 0.40 | 0.58 | 0.18 | 0.11 | 0.31 | 0.06 | 2.15 | Asia | 2015 | nan | . 1 Albania | 4.64 | 1.00 | 0.80 | 0.73 | 0.38 | 0.20 | 0.04 | 1.49 | Europe | 2015 | nan | . 2 Algeria | 5.87 | 1.09 | 1.15 | 0.62 | 0.23 | 0.07 | 0.15 | 2.57 | Africa | 2015 | nan | . 3 Argentina | 6.60 | 1.19 | 1.44 | 0.70 | 0.49 | 0.11 | 0.06 | 2.61 | South America | 2015 | nan | . 4 Armenia | 4.38 | 0.90 | 1.01 | 0.64 | 0.20 | 0.08 | 0.03 | 1.52 | Asia | 2015 | nan | . Exploratory Data Analysis on Combines Dataset with Terrorism . We can see that there are some countries which go through alot of terrorist attacks . There seems to be a: Linear Relationship: happiness_score v/s gdp_per_capita, happiness_score v/s health, happiness_score v/s freedom Non-Linear Relationship: happiness_score v/s gerosity, happiness_score v/s government_trust . . . Inference: . With the data that we have, there doesn&#39;t seem to be much correlation between terror attacks and happienss index. We would need more data to come to a singificant conclusion as to how terrorism really affects the happiness index. Perhaps another factors that would allow us to further understand the happiness index would be war conditions. Countries like Syria and Palestine, are in critical war zones which would make their living condtions poor and hence affecting the happiness index. . Part C . To create a Model to Predict Happiness Index . Predicting happiness Index . The MSE value of our model is: 0.25 The R2 score of our model is : 0.819 . We used Lasso Regression with the degree of 6 to perform Polynomial Lasso Regression in order to predict the Happiness Score. . Our MSE value for Lasso Regression is 0.25 and our R2 Score is 0.82 which is pretty satisfactory. . Why did we use Lasso Regression? . We understood that Lasso tends to do well if there are a small number of significant parameters and the others are close to zero (ergo: when only a few predictors actually influence the response). This was our case where our parameters no. was relatively small hence this seemed like the good approach to take. Ridge works well if there are many large parameters of about the same value (ergo: when most predictors impact the response). | Lasso, or Least Absolute Shrinkage and Selection Operator, is quite similar conceptually to ridge regression. It adds a penalty for non-zero coefficients. However, unlike ridge regression which penalizes sum of squared coefficients (the so-called L2 penalty), lasso penalizes the sum of their absolute values (L1 penalty). As a result, for high values of λ, many coefficients are exactly zeroed under lasso. | . The MSE value of our model is: 0.25 The R2 score of our model is : 0.82 . What did we do in MLP Regressor? . Our choice of multiple number of layers here is to depict non-linearity in the model. Multiple number of layers lead to non-linearity, but excess number of layers may lead to overfitting of the model. | Experimenting and trying out multiple combinations of layers and neurons, three layers with depicted neurons turned out to be suitable for our model. | Also, we used the default Activation Function, ReLu because of our model being a Linear Regression Model and ReLu fits the best for this problem. | . Our MSE value for MLP Regressor is 0.26 and our R2 Score is 0.82 which is pretty much the same as Lasso Regression. . Predicting Terrorist attacks . We also tried experimenting witht the variables we have from the happiness dataset to see if we can satisfactorily predict no. of terrorist attacks likely to happen. . Of course the model does not have the best performance because we understand that there are more factors that affect the outcome. . Our future work here is to get more external factors relating to what sparks terrorim attacks and create model to allow for better risk handling. . The R2 score of our model is: 0.07916807295022832 . Clearly our model is not performing well here. . Part D . To see how much Health contributes to the Happiness Index? With the current pandemic at hand, predicting COVID-19 Cases in the coming days for countries. . Thoughts . From Part A, we have realized that Health does play a major role in a country&#39;s happiness score. With the current pandemic at hand, we were motivated to look at COVID cases and forecast the upcoming cases. We wanted to compare the COVID data with the happiness index data, however, we felt that it would not give the right results since the happiness index data of 2020 is from the months of January-February when there was not much COVID health crisis happening. . However, in pursuit of excitement and interest, we decided to go forth to do a basic forecasting model on COVID-19 dataset using fbprophet. . What and Why Prophet? . Prophet is Facebooks&#39;open source time series prediction. Prophet decomposes time series into trend, seasonality and holiday. It has intuitive hyper parameters which are easy to tune. . Prophet time series = Trend + Seasonality + Holiday + error . Trend models non periodic changes in the value of the time series. Seasonality is the periodic changes like daily, weekly, or yearly seasonality. Holiday effect which occur on irregular schedules over a day or a period of days. Error terms is what is not explained by the model. . We believe that the advantages of using Prophet are: . Accommodates seasonality with multiple periods | Prophet is resilient to missing values | Best way to handle outliers in Prophet is to remove them | Fitting of the model is fast | Intuitive hyper parameters which are easy to tune | . Credits to https://towardsdatascience.com/time-series-prediction-using-prophet-in-python-35d65f626236 for information on Prophet. . . . The performance of the model . . Part E . Creating a Dashbord for viewing COVID-19 Predictions . Our very own COVID-19 Forecasting Dashboard . Using the model that we built, we created a COVID-19 Forecasting Dashboard. You can view it in this link: . https://covid-prediction.herokuapp.com/ . Our main motivation here was to be able to learn how to best provide the model outcomes to audience. . You can see the code in our file under the name: Covid-pred . Conclusions . The data factors being used for calculating the Happiness Index of the countries is not holistic and inclusive. There are other factors to also be considered. GDP per capita seems to be a skewed figure itself and the limitations that GDP poses is highly likely to bias the happiness score. . | We did not find much correlation between no. of terror attacks and happiness index of a country. However, we believe we need to consider more factors &amp; influences pertaining to terrorism for us to properly see the relationship. . | For COVID-19 forecasts, we performed univariate analysis on our historical data, which made us realize that historical data alone might not be sufficient for the prediction. But certainly, this is one of the main predictors and it can be used with other set of predictors to create a more powerful model. . | . Improvements That Can Be Done . Improvement: Figure out another way to calculate Happiness Index of a country which includes more holistic and inclusive factors . Based on our observations, we believe that factors apart from 6 selected need to be considered in order to make accurate happiness index scoring. A possible improvement would be to research on an alternative way to calculate the index without using GDP per capita as a score . Improvement: To move into using NLP &amp; Decision Trees for analyzing Terrorism Data . Most of the factors in the Terrorism Dataset were text based. Hence, using NLP here will be best for us to understand the influences of the predictor on the response. To improve model prediction, we believe models pertaining to Decision Trees will help. . Improvement: To move into Multivariate Analysis . We forecasted COVID-19 cases using only past data – however, we are aware that historical data alone is not enough to make accurate forecasts. There are many other external factors – our intention was to more or less look at the trend and observe how this trend will move in the future. .",
            "url": "https://niegil-francis.github.io/Personal_Blog/2020/10/23/A-Country-Secret-to-Happiness.html",
            "relUrl": "/2020/10/23/A-Country-Secret-to-Happiness.html",
            "date": " • Oct 23, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Covid-19 Overview",
            "content": "Author: M J Niegil Francis | Data Source: https://api.covid19india.org | . These are unprecedented times that we live in. . It&#39;s hard to imagine and feel the severity of a pandemic until it comes knocking at our door. Here&#39;s hoping that we change our mindset towards preserving our future and prioritizing the quality of environment we live in. . This blog gives an outlook of the rise in Covid Cases since the first case in India. The number of new cases, deaths and recovered patients are also highlighted. The top 5 states with the highest cases are plotted, followed by a summary of all the states in tabular form. . A more detailed overview of the global Covid situation can be found in the web-app: Covid-19 Global Dashboard Contributors: Niegil, Praneetha and Sakthisree. The github repository can be accessed here . India . Last update: 2021-10-31 . Confirmed cases: . 34285612 (+12907) . Confirmed deaths: . 458470 (+251) . Recovered: . 33661339 (+13152) . Cases Recovered Deaths PCases PRecovered PDeaths Cases (+) Deaths (+) Recovered (+) Fatality Rate Recovery Rate . State . Maharashtra 6611078 | 6450585 | 140216 | 6609906 | 6449186 | 140196 | 1172 | 20 | 1399 | 2.120000 | 97.570000 | . Kerala 4968657 | 4857181 | 31681 | 4961490 | 4850742 | 31514 | 7167 | 167 | 6439 | 0.640000 | 97.760000 | . Karnataka 2988333 | 2941578 | 38082 | 2988041 | 2941233 | 38071 | 292 | 11 | 345 | 1.270000 | 98.440000 | . Tamil Nadu 2702623 | 2655015 | 36116 | 2701614 | 2653832 | 36097 | 1009 | 19 | 1183 | 1.340000 | 98.240000 | . Andhra Pradesh 2066450 | 2047722 | 14373 | 2066065 | 2047047 | 14369 | 385 | 4 | 675 | 0.700000 | 99.090000 | . Uttar Pradesh 1710158 | 1687151 | 22900 | 1710152 | 1687145 | 22900 | 6 | 0 | 6 | 1.340000 | 98.650000 | . West Bengal 1592908 | 1565471 | 19141 | 1591994 | 1564558 | 19126 | 914 | 15 | 913 | 1.200000 | 98.280000 | . Delhi 1439870 | 1414431 | 25091 | 1439825 | 1414385 | 25091 | 45 | 0 | 46 | 1.740000 | 98.230000 | . Odisha 1041457 | 1029147 | 8386 | 1040969 | 1028697 | 8382 | 488 | 4 | 450 | 0.810000 | 98.820000 | . Chhattisgarh 1006052 | 992159 | 13577 | 1006020 | 992127 | 13576 | 32 | 1 | 32 | 1.350000 | 98.620000 | . Rajasthan 954429 | 945443 | 8954 | 954427 | 945441 | 8954 | 2 | 0 | 2 | 0.940000 | 99.060000 | . Gujarat 826577 | 816283 | 10089 | 826557 | 816260 | 10089 | 20 | 0 | 23 | 1.220000 | 98.750000 | . Madhya Pradesh 792854 | 782215 | 10524 | 792838 | 782207 | 10524 | 16 | 0 | 8 | 1.330000 | 98.660000 | . Haryana 771252 | 761068 | 10049 | 771241 | 761058 | 10049 | 11 | 0 | 10 | 1.300000 | 98.680000 | . Bihar 726098 | 716390 | 9661 | 726090 | 716381 | 9661 | 8 | 0 | 9 | 1.330000 | 98.660000 | . Telangana 671463 | 663498 | 3956 | 671342 | 663315 | 3955 | 121 | 1 | 183 | 0.590000 | 98.810000 | . Assam 610645 | 600974 | 5997 | 610433 | 600738 | 5996 | 212 | 1 | 236 | 0.980000 | 98.420000 | . Punjab 602401 | 585591 | 16559 | 602375 | 585566 | 16558 | 26 | 1 | 25 | 2.750000 | 97.210000 | . Jharkhand 348764 | 343518 | 5138 | 348754 | 343510 | 5138 | 10 | 0 | 8 | 1.470000 | 98.500000 | . Uttarakhand 343896 | 330195 | 7400 | 343891 | 330186 | 7400 | 5 | 0 | 9 | 2.150000 | 96.020000 | . Jammu and Kashmir 332249 | 326915 | 4432 | 332154 | 326836 | 4432 | 95 | 0 | 79 | 1.330000 | 98.390000 | . Himachal Pradesh 224106 | 218410 | 3738 | 224021 | 218212 | 3737 | 85 | 1 | 198 | 1.670000 | 97.460000 | . Goa 178108 | 174392 | 3364 | 178085 | 174339 | 3364 | 23 | 0 | 53 | 1.890000 | 97.910000 | . Puducherry 128013 | 125726 | 1857 | 127975 | 125681 | 1857 | 38 | 0 | 45 | 1.450000 | 98.210000 | . Manipur 123731 | 121102 | 1921 | 123668 | 121040 | 1920 | 63 | 1 | 62 | 1.550000 | 97.880000 | . Mizoram 121359 | 114612 | 432 | 120780 | 114002 | 430 | 579 | 2 | 610 | 0.360000 | 94.440000 | . Tripura 84468 | 83466 | 813 | 84456 | 83464 | 813 | 12 | 0 | 2 | 0.960000 | 98.810000 | . Meghalaya 83627 | 81746 | 1450 | 83605 | 81695 | 1449 | 22 | 1 | 51 | 1.730000 | 97.750000 | . Chandigarh 65351 | 64495 | 820 | 65346 | 64492 | 820 | 5 | 0 | 3 | 1.250000 | 98.690000 | . Arunachal Pradesh 55155 | 54774 | 280 | 55154 | 54765 | 280 | 1 | 0 | 9 | 0.510000 | 99.310000 | . Sikkim 31979 | 31063 | 396 | 31958 | 31055 | 395 | 21 | 1 | 8 | 1.240000 | 97.140000 | . Nagaland 31842 | 29904 | 685 | 31831 | 29883 | 684 | 11 | 1 | 21 | 2.150000 | 93.910000 | . Ladakh 20962 | 20687 | 208 | 20951 | 20678 | 208 | 11 | 0 | 9 | 0.990000 | 98.690000 | . Dadra and Nagar Haveli and Daman and Diu 10681 | 10644 | 4 | 10681 | 10643 | 4 | 0 | 0 | 1 | 0.040000 | 99.650000 | . Lakshadweep 10365 | 10270 | 51 | 10365 | 10270 | 51 | 0 | 0 | 0 | 0.490000 | 99.080000 | . Andaman and Nicobar Islands 7651 | 7518 | 129 | 7651 | 7518 | 129 | 0 | 0 | 0 | 1.690000 | 98.260000 | .",
            "url": "https://niegil-francis.github.io/Personal_Blog/2020/07/28/Covid-Dashboard.html",
            "relUrl": "/2020/07/28/Covid-Dashboard.html",
            "date": " • Jul 28, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". M J Niegil Francis . An avid cyclist, music enthusiast, and engineer, I like spending my time finding things that tickle my brain. Hope you enjoy my take on the cool AI use cases in these blogs! . .",
          "url": "https://niegil-francis.github.io/Personal_Blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://niegil-francis.github.io/Personal_Blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}